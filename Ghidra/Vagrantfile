# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# VM for reverse engineering with Ghidra

SF="~/workspace"

#Install stuff
#NOTE: not sure why java needs ln on Debian 11, but it works
$script_installsw = <<SCRIPT
apt-get update

apt-get -y install binwalk
apt-get -y install bvi

wget --progress=bar:force --no-cookies --no-check-certificate --header "Cookie: oraclelicense=accept-securebackup-cookie" "https://download.oracle.com/otn-pub/java/jdk/14.0.1+7/664493ef4a6946b186ff29eb326336a2/jdk-14.0.1_linux-x64_bin.deb"
dpkg -i jdk-*.deb
rm jdk-*.deb

ln -s /usr/lib/jvm/jdk-*/bin/* /usr/bin/

DEBIAN_FRONTEND=noninteractive apt-get -y install wireshark
echo "wireshark-common wireshark-common/install-setuid boolean true" | sudo debconf-set-selections
sudo DEBIAN_FRONTEND=noninteractive dpkg-reconfigure wireshark-common
addgroup vagrant wireshark
SCRIPT

# Install Ghidra
$script_installgh = <<SCRIPT
wget --progress=bar:force https://ghidra-sre.org/ghidra_9.1.2_PUBLIC_20200212.zip
unzip ghidra*.zip -d ~/Downloads
rm ghidra*.zip

ln -s ~/Downloads/ghidra*/ghidraRun ~/Desktop/Ghidra
SCRIPT

Vagrant.configure("2") do |config|

    config.vm.box = "axcxl/debian11_kde"

    config.vm.provider :virtualbox do |vb|
        vb.gui = true
        vb.memory = 8192
        vb.cpus = 8
    end

    config.vm.define "ghidra" do |machine|

        machine.vm.hostname = 'ghidra'

        # Install SW
        machine.vm.provision "shell", inline: $script_installsw

        # Ghidra
        machine.vm.provision "shell", inline: $script_installgh, privileged: false
    end

    config.vm.synced_folder "#{SF}", "/home/vagrant/workspace"

end

